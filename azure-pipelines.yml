resources:
  repositories:
  - repository: self
    type: git
    ref: Terraform-azure-pipelines

variables:
- name: charanname
  value: initialValue 

jobs:
- job: Job_1
  displayName: Create Resource
  pool:
    name: Default
  steps:
  - checkout: self
    clean: true
  - task: TerraformCLI@0
    displayName: terraform init
    inputs:
      command: init
      workingDirectory: terraform
      environmentServiceName: e96a6e0d-672e-48cc-a750-83654b010b11
  - task: TerraformCLI@0
    displayName: terraform plan
    inputs:
      command: plan
      workingDirectory: terraform
      environmentServiceName: e96a6e0d-672e-48cc-a750-83654b010b11

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        # Write your PowerShell commands here.
        
        Write-Host "Hello World"
        
        $json = Get-Content $env:jsonPath | Out-String | ConvertFrom-Json
        
        foreach($prop in $json.psobject.properties) {
            Write-Host("##vso[task.setvariable variable=$($prop.Name);]$($prop.Value.value)")
        }

        Write-Host "Charan===============\n\n\n\n"
        Get-ChildItem -Path Env:\ | Format-List

  # - task: Bash@3
  #   inputs:
  #     targetType: 'inline'
  #     script: |
  #       # Write your commands here
        
  #       echo 'Hello world'
        
  #       echo "Service URL: $(Outputs.service_url)"
        
  #       echo $(Outputs)
  # - task: PowerShell@2
  #   inputs:
  #     targetType: 'inline'
  #     script: |
  #       # Write your PowerShell commands here.
        
  #       Write-Host "Hello World"
        
  #       Write-Host "filesizecounter : " $(NAME) 
        
        
  #       # AppService $(TF_OUT_NAME)
  #       # echo $env
  #       Get-ChildItem -Path Env:\ | Format-List

